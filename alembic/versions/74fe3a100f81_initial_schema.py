"""Initial schema

Revision ID: 74fe3a100f81
Revises: None
Create Date: 2025-07-08 01:12:55.427107

"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '74fe3a100f81'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise',
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('primary_muscle', sa.Text(), nullable=True),
    sa.Column('equipment', sa.Text(), nullable=True),
    sa.Column('video_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('exercise_id')
    )
    op.create_table('program_template',
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('template_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('sex', sa.String(length=1), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('height_cm', sa.SmallInteger(), nullable=False),
    sa.Column('weight_kg', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('body_fat_pct', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('health_issues', sa.Text(), nullable=True),
    sa.Column('tz_name', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_user_telegram_id'), 'user', ['telegram_id'], unique=True)
    op.create_table('template_exercise',
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.SmallInteger(), nullable=False),
    sa.Column('sets', sa.SmallInteger(), nullable=False),
    sa.Column('reps', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.exercise_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['template_id'], ['program_template.template_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('template_id', 'exercise_id'),
    sa.UniqueConstraint('template_id', 'exercise_id', name='pk_template_exercise')
    )
    op.create_table('user_program',
    sa.Column('user_program_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['program_template.template_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_program_id')
    )
    op.create_table('user_subscription',
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('start_ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_ts', sa.DateTime(timezone=True), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='true', nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subscription_id')
    )
    op.create_table('subscription_reminder',
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('user_subscription_id', sa.Integer(), nullable=False),
    sa.Column('remind_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('sent', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('sent_ts', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_subscription_id'], ['user_subscription.subscription_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('reminder_id'),
    postgresql_partition_by=None
    )
    op.create_table('user_program_exercise',
    sa.Column('user_program_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('working_weight', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.exercise_id'], ),
    sa.ForeignKeyConstraint(['user_program_id'], ['user_program.user_program_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_program_id', 'exercise_id'),
    sa.UniqueConstraint('user_program_id', 'exercise_id', name='pk_user_program_exercise')
    )
    op.create_table('user_program_schedule',
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('user_program_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_program_id'], ['user_program.user_program_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('schedule_id'),
    sa.UniqueConstraint('user_program_id', 'day_of_week', name='uq_program_schedule')
    )
    op.create_table('workout_log',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_program_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('workout_date', sa.Date(), nullable=False),
    sa.Column('actual_sets', sa.SmallInteger(), nullable=False),
    sa.Column('actual_reps', sa.Text(), nullable=False),
    sa.Column('actual_weight', sa.DECIMAL(precision=6, scale=2), nullable=True),
    sa.Column('rpe', sa.SmallInteger(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('logged_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.exercise_id'], ),
    sa.ForeignKeyConstraint(['user_program_id'], ['user_program.user_program_id'], ),
    sa.PrimaryKeyConstraint('log_id'),
    sa.UniqueConstraint('user_program_id', 'exercise_id', 'workout_date', name='uq_workout_log')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_log')
    op.drop_table('user_program_schedule')
    op.drop_table('user_program_exercise')
    op.drop_table('subscription_reminder')
    op.drop_table('user_subscription')
    op.drop_table('user_program')
    op.drop_table('template_exercise')
    op.drop_index(op.f('ix_user_telegram_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('program_template')
    op.drop_table('exercise')
    # ### end Alembic commands ###
