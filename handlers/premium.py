from aiogram import Router, F
from aiogram.types import Message

from services.subscription_service import SubscriptionService
from keyboards.inline_keyboards import tariffs_kb

router = Router()

TARIFFS_TEXT = (
    "–°–µ–π—á–∞—Å —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º —Ç–∞—Ä–∏—Ñ–µ.\n\n"
    "üì¶ *–ß—Ç–æ –≤ –Ω–µ–≥–æ –≤–∫–ª—é—á–µ–Ω–æ:*\n"
    "‚Ä¢ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤\n"
    "‚Ä¢ –ß–∞—Ç —Å –æ–±—â–∏–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é\n\n"
    "üöÄ –¢–∞–∫–∂–µ —É –Ω–∞—Å –µ—Å—Ç—å *–ü—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏—è (990 ‚ÇΩ/–º–µ—Å), –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è:*\n"
    "‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
    "‚Ä¢ –ü–æ–ª–Ω—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π\n"
    "‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é\n"
    "‚Ä¢ –ß–∞—Ç —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é, –∑–¥–æ—Ä–æ–≤—å—é –∏ —Å–ø–æ—Ä—Ç—É\n"
    "‚Ä¢ –ú–æ—Ä–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é üòä\n\n"
    "–ü–æ–ø—Ä–æ–±—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –Ω–µ–¥–µ–ª—é –∏–ª–∏ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–π–¥–µ–º –Ω–∞ –ü—Ä–µ–º–∏—É–º?"
)

@router.message(F.text == "‚≠ê Premium")
async def premium_info(message: Message):
    svc = SubscriptionService(message.from_user.id)
    try:
        if svc.has_active():
            await message.answer("–£ –≤–∞—Å —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ üòä")
            return
    finally:
        svc.close()

    await message.answer(
        TARIFFS_TEXT,
        parse_mode="Markdown",
        reply_markup=tariffs_kb()
    )
